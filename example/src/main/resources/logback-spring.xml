<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration  scan="true" scanPeriod="30 seconds">-->
<!--&lt;!&ndash;    debug="true"&ndash;&gt;-->
<!--    &lt;!&ndash;<springProperty scope="context" name="logLevel" source="log.level"/>&ndash;&gt;-->

<!--    &lt;!&ndash;日志存放的路径&ndash;&gt;-->
<!--    <springProperty scope="context" name="OPEN_FILE_PATH" source="log.path"/>-->
<!--    &lt;!&ndash;日志文件夹的名称 这里即为项目的name&ndash;&gt;-->
<!--    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>-->

<!--    &lt;!&ndash; 彩色日志 &ndash;&gt;-->
<!--    &lt;!&ndash; 彩色日志依赖的渲染类 &ndash;&gt;-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->
<!--    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />-->
<!--    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />-->

<!--&lt;!&ndash;    <property name="LOG_PATTERN"&ndash;&gt;-->
<!--&lt;!&ndash;              value="${LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} - %clr([%X{parentTrackId}])-%clr([%X{currentTrackId}])　%clr(%-5level) [%thread] [%X{ThreadId}] %logger{36} : %msg%n}"/>&ndash;&gt;-->

<!--    <property name="LOG_PATTERN"-->
<!--              value="%d{yyyy-MM-dd HH:mm:ss.SSS} - %highlight([%X{parentTrackId}])-[%X{currentTrackId}]　%-5level [%thread] [%X{ThreadId}] %logger{36} : %msg%n"/>-->



<!--    &lt;!&ndash; 输出文件路径 &ndash;&gt;-->
<!--    &lt;!&ndash;<property name="LOG_PATTERN" value="/logs"/>&ndash;&gt;-->
<!--    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder>-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->

<!--        <filter class="io.boncray.logback.logger.filter.CollectionLogFilter">&lt;!&ndash; 测试日志过滤器 &ndash;&gt;</filter>-->
<!--    </appender>-->

<!--    &lt;!&ndash; ch.qos.logback.core.rolling.RollingFileAppender 文件日志输出 &ndash;&gt;-->
<!--    <appender name="OPEN-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash;不能有这项配置！！！！！&ndash;&gt;-->
<!--        &lt;!&ndash;<Encoding>UTF-8</Encoding>&ndash;&gt;-->
<!--        &lt;!&ndash;<File>${OPEN_FILE_PATH}/${APP_NAME}.log</File>&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;日志文件输出的文件名&ndash;&gt;-->
<!--            <FileNamePattern>${OPEN_FILE_PATH}/${APP_NAME}/all/${APP_NAME}.%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>-->
<!--            &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--            <totalSizeCap>10GB</totalSizeCap>-->
<!--            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                &lt;!&ndash;日志文件最大的大小&ndash;&gt;-->
<!--                <MaxFileSize>100MB</MaxFileSize>-->
<!--            </TimeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->

<!--        <layout class="ch.qos.logback.classic.PatternLayout">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </layout>-->
<!--    </appender>-->

<!--    &lt;!&ndash;输出到debug&ndash;&gt;-->
<!--    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <FileNamePattern>${OPEN_FILE_PATH}/${APP_NAME}/debug/${APP_NAME}.%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--            <totalSizeCap>10GB</totalSizeCap>-->
<!--            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <MaxFileSize>100MB</MaxFileSize>-->
<!--            </TimeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        <append>true</append>-->
<!--        <encoder>-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">&lt;!&ndash; 只打印DEBUG日志 &ndash;&gt;-->
<!--            <level>DEBUG</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--&lt;!&ndash;        <filter class="io.boncray.logback.logger.filter.CollectionLogFilter">&lt;!&ndash; 测试日志过滤器 &ndash;&gt;</filter>&ndash;&gt;-->
<!--    </appender>-->

<!--    &lt;!&ndash;输出到info&ndash;&gt;-->
<!--    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <FileNamePattern>${OPEN_FILE_PATH}/${APP_NAME}/info/${APP_NAME}.%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--            <totalSizeCap>10GB</totalSizeCap>-->
<!--            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <MaxFileSize>100MB</MaxFileSize>-->
<!--            </TimeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        <append>true</append>-->
<!--        <encoder>-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">&lt;!&ndash; 只打印INFO日志 &ndash;&gt;-->
<!--            <level>INFO</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->

<!--    &lt;!&ndash;输出到error&ndash;&gt;-->
<!--    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <FileNamePattern>${OPEN_FILE_PATH}/${APP_NAME}/error/${APP_NAME}.%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--            <totalSizeCap>10GB</totalSizeCap>-->
<!--            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <MaxFileSize>100MB</MaxFileSize>-->
<!--            </TimeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        <append>true</append>-->
<!--        <encoder>-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">&lt;!&ndash; 只打印ERROR日志 &ndash;&gt;-->
<!--            <level>ERROR</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->

<!--    &lt;!&ndash;输出到warn&ndash;&gt;-->
<!--    <appender name="warn" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            <FileNamePattern>${OPEN_FILE_PATH}/${APP_NAME}/warn/${APP_NAME}.%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>-->
<!--            <MaxHistory>30</MaxHistory>-->
<!--            <totalSizeCap>10GB</totalSizeCap>-->
<!--            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <MaxFileSize>100MB</MaxFileSize>-->
<!--            </TimeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        <append>true</append>-->
<!--        <encoder>-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">&lt;!&ndash; 只打印WARN日志 &ndash;&gt;-->
<!--            <level>WARN</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->

<!--    <root level="info">-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="OPEN-FILE"/>-->
<!--        <appender-ref ref="debug"/>-->
<!--        <appender-ref ref="info"/>-->
<!--        <appender-ref ref="error"/>-->
<!--        <appender-ref ref="warn"/>-->
<!--    </root>-->
<!--</configuration>-->